{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","getMaximalId","todoes","Math","max","todoesList","App","useState","setTitle","setUserId","setNewTodo","isHaveTitle","setIsHaveTitle","isHaveUserId","setIsHaveUserId","action","method","onSubmit","event","preventDefault","newTodo","length","Form","Control","placeholder","type","value","onChange","target","Select","Number","disabled","Button","variant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2b854da.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user\n        ? <UserInfo user={user} />\n        : 'No user found'}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return (\n          <TodoInfo todo={todo} key={todo.id} />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getMaximalId(todoes: Todo[]) {\n  return Math.max(...todoes.map((todo) => todo.id)) + 1;\n}\n\nexport const todoesList: Todo[] = [...todosFromServer].map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState<number>(0);\n  const [todoes, setNewTodo] = useState(todoesList);\n  const [isHaveTitle, setIsHaveTitle] = useState(false);\n  const [isHaveUserId, setIsHaveUserId] = useState(false);\n\n  const resetState = () => {\n    setTitle('');\n    setUserId(0);\n    setIsHaveTitle(false);\n    setIsHaveUserId(false);\n  };\n\n  const addNewTodo = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const newTodo: Todo = {\n      id: getMaximalId(todoes),\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    if (title.length === 0) {\n      setIsHaveTitle(true);\n    }\n\n    if (userId < 1) {\n      setIsHaveUserId(true);\n    }\n\n    if (title.length > 0 && userId > 0) {\n      setNewTodo([...todoes, newTodo]);\n\n      resetState();\n    }\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsHaveTitle(false);\n  };\n\n  const handleChangeSelected = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setUserId(Number(event.target.value));\n    setIsHaveUserId(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={addNewTodo}>\n        <div className=\"field\">\n          <Form.Control\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleChangeInput}\n          />\n          {isHaveTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <Form.Select\n            data-cy=\"userSelect\"\n            value={Number(userId)}\n            onChange={handleChangeSelected}\n          >\n            <option disabled value={0}>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </Form.Select>\n\n          {isHaveUserId && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <Button variant=\"outline-success\" type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </Button>\n      </form>\n\n      <TodoList todos={todoes} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}